<?php
/**
 * the main user function
 * 
 * @return       output       The main module page
 */
function UserPictures_user_main()
{
    // Security check 
    if (!pnSecAuthAction(0, 'UserPictures::', '::', ACCESS_OVERVIEW)) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }

    // Create output object - this object will store all of our output so that
    // we can return it easily when required
    $pnRender =& new pnRender('UserPictures');
	    
    
    $pnRender->assign('startnumthumb',$startnumthumb);
    // Return the output that has been generated by this function
    return $pnRender->fetch('userpictures_user_main.htm');
}

/**
 * manage the general settings
 * 
 * @return       output      
 */
function UserPictures_user_settings()
{
    // Security check 
    if (!pnSecAuthAction(0, 'UserPictures::', '::', ACCESS_COMMENT)) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }

    $action=pnVarCleanFromInput('action');
    if ($action=="update") {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
        }
	else {
	    // Now we should update the user's settings
	    $nolinking=(int)pnVarCleanFromInput('nolinking');
	    $nocomments=(int)pnVarCleanFromInput('nocomments');
	    $picspublic=(int)pnVarCleanFromInput('picspublic');
	    if (pnModAPIFunc('UserPictures','user','storeSettings',array('uid'=>pnUserGetVar('uid'),'nolinking'=>$nolinking,'nocomments'=>$nocomments,'picspublic'=>$picspublic))) pnSessionSetVar('statusmsg',_USERPICTURESSETTINGSSTORED);
	}
    }
    else if ($action=="deleteMyLinks") {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
        }
	else {
	    // Now we should delete all links from all images to a given person
	    if (pnModAPIFunc('UserPictures','user','delPerson',array('uname'=>pnUserGetVar('uname')))) pnSessionSetVar('statusmsg',_USERPICTURESASSOCSDELETED);
	}
    }

    // Create output object - this object will store all of our output so that
    // we can return it easily when required
    $pnRender =& new pnRender('UserPictures');
    
    // we need to know if we can use the comment function
    if (pnModAvailable('pnComments')) $pnRender->assign('comment',1);
    
    // get the genral settings
    $settings = pnModAPIFunc('UserPictures','user','getSettings',array('uid'=>pnUserGetVar('uid')));
    $pnRender->assign('settings',$settings);
	    
    // Return the output that has been generated by this function
    return $pnRender->fetch('userpictures_user_settings.htm');
}

/**
 * the main user function
 * 
 * @return       output       The main module page
 */
function UserPictures_user_assocPersons()
{
    // Security check 
    if (!pnSecAuthAction(0, 'UserPictures::', '::', ACCESS_COMMENT)) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }

    // Create output object - this object will store all of our output so that
    // we can return it easily when required
    $pnRender =& new pnRender('UserPictures');
    
    $pictures=pnModAPIFunc('UserPictures','user','getPicture',array('picture_id'=>pnVarCleanFromInput('picture_id')));
    $picture=$pictures[0];
    if ($picture[uid] == pnUserGetVar('uid')) $pnRender->assign('picture',$picture);
    $picture_id=$picture[id];
    
    // now we have to check for any action
    $action = pnVarCleanFromInput('action');
    if (isset($action) && ($action == 'add')) {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
            return pnRedirect(pnModURL('UserPictures','user','assocPersons',array('picture_id'=>$picture_id)));
        }
	$uname=pnVarCleanFromInput('uname');
	if (!isset($uname) || (!(strlen($uname)>0))) pnSessionSetVar('errormsg',_USERPICTURESNOCONTACTNAMEGIVEN);
	else if (pnModAPIFunc('UserPictures','user','addPerson',array('picture_id'=>$picture_id,'uname'=>$uname))) pnSessionSetVar('statusmsg',_USERPICTURESCONTACTADDED);
	else pnSessionSetVar('errormsg',_USERPICTURESUSERNOTFOUNDORADDED);
    }
    if (isset($action) && ($action == 'delete')) {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
            return pnRedirect(pnModURL('UserPictures','user','assocPersons',array('picture_id'=>$picture_id)));
        }
	$uname=pnVarCleanFromInput('uname');
	if (!isset($uname) || (!(strlen($uname)>0))) pnSessionSetVar('errormsg',_USERPICTURESNOCONTACTNAMEGIVEN);
	else if (pnModAPIFunc('UserPictures','user','delPerson',array('picture_id'=>$picture_id,'uname'=>$uname))) pnSessionSetVar('statusmsg',_USERPICTURESCONTACTDELETED);
	else pnSessionSetVar('errormsg',_USERPICTURESDELETEERROR);
    }
    
    if (isset($action)) return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$picture['template_id']))."#".$picture[id]);
    
    $pnRender->assign('assocPersons',pnModAPIFunc('UserPictures','user','getPersons',array('picture_id'=>$picture_id)));
    // Return the output that has been generated by this function
    return $pnRender->fetch('userpictures_user_assocpersons.htm');
}

/**
 * the newest uploaded images
 * 
 * @return       output       The main module page
 */
function UserPictures_user_latest()
{
    // Security check 
    if (!pnSecAuthAction(0, 'UserPictures::', '::', ACCESS_OVERVIEW)) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }

    // Create output object - this object will store all of our output so that
    // we can return it easily when required
    $pnRender =& new pnRender('UserPictures');
    
    $startnumthumb = pnVarCleanFromInput('startnumthumb');
    if (!isset($startnumthumb) || (!($startnumthumb>0))) $startnumthumb = 1;
    
    $pnRender->assign('startnumthumb',$startnumthumb);
	    
    // Return the output that has been generated by this function
    return $pnRender->fetch('userpictures_user_latest.htm');
}

/**
 * the images associated with a user
 * 
 * @param	$args['uid']	int
 * @return       output     
 */
function UserPictures_user_assoc()
{
    // Security check 
    if (!pnSecAuthAction(0, 'UserPictures::', '::', ACCESS_OVERVIEW)) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }

    // Create output object - this object will store all of our output so that
    // we can return it easily when required
    $pnRender =& new pnRender('UserPictures');
    $uid = pnVarCleanFromInput('uid');
    
    $pnRender->assign('uid',$uid);
    
    $startnumthumb = pnVarCleanFromInput('startnumthumb');
    if (!isset($startnumthumb) || (!($startnumthumb>0))) $startnumthumb = 1;
    $pnRender->assign('startnumthumb',$startnumthumb);
    
    $hideown = pnVarCleanFromInput('hideown');
    if (isset($hideown) && ($hideown==1)) $pnRender->assign('hideown','1');
	    
    // Return the output that has been generated by this function
    return $pnRender->fetch('userpictures_user_assoc.htm');
}

/**
 * display a user's gallery
 * 
 * @return       output       The main module page
 */
function UserPictures_user_showGallery()
{
    $uid=pnVarCleanFromInput('uid');
    if (!isset($uid) && (!($uid>0))) {
	pnSessionSetVar('erormsg',_USERPICTURESNOUSERSPECIFIED);
    }

    // Security check removed - we will use our own security check ;-)
    $settings=pnModAPIFunc('UserPictures','user','getSettings',array('uid'=>$uid));
    if (($settings['picspublic']!=1) && (!pnUserLoggedIn())) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }

    // Create output object - this object will store all of our output so that
    // we can return it easily when required
    $pnRender =& new pnRender('UserPictures');
    
    $pnRender->assign('uid',$uid);
    $pnRender->assign('viewer_uid',pnUsergetVar('uid'));
    
    // is there a category filter active?
    $cat_id=(int)pnVarCleanFromInput('cat_id');
    $pnRender->assign('cat_id',$cat_id);
    
    // we need the user's settings
    $pnRender->assign('settings',pnModAPIFunc('UserPictures','user','getSettings',array('uid'=>$uid)));
    
    // we need the pager's value
    $startnum=pnVarCleanFromInput('startnum');

    $pictures=pnModAPIFunc('UserPictures','user','getPictures',array('template_id'=>0,'uid'=>$uid,'cat_id'=>$cat_id));
    $pictures_startnum=pnModAPIFunc('UserPictures','user','getPictures',array('template_id'=>0,'uid'=>$uid,'cat_id'=>$cat_id,'startnum'=>$startnum));

    $pnRender->assign('pictures',$pictures_startnum);
    $pnRender->assign('picturecounter',count($pictures));
    $startnum=pnVarCleanFromInput('startnum');
    if (!isset($startnum) or (!($startnum>=0))) return pnRedirect(pnModURL('UserPictures','user','showThumbnailGallery',array('uid'=>$uid,'cat_id'=>$cat_id)));
    $pnRender->assign('startnum',$startnum);

    // we need to check if the pic_id is correct. otherwise we'll create a new redirect. this is important for the use of a comment module for example!
    // the pager link might be incorrenct!
    $pic_id=(int)pnVarCleanFromInput('pic_id');
    if ($pic_id!=$pictures_startnum[0]['id']) return pnRedirect(pnModURL('UserPictures','user','showGallery',array('uid'=>pnVarCleanFromInput('uid'),'cat_id'=>pnVarCleanFromInput('cat_id'),'pic_id'=>$pictures_startnum[0]['id'],'startnum'=>pnVarCleanFromInput('startnum'))));


    // Return the output that has been generated by this function
    return $pnRender->fetch('userpictures_user_showgallery.htm');
}

/**
 * display categorie management
 * 
 * @return       output       
 */
function UserPictures_user_manageCategories()
{
    // Security check 
    if (!pnSecAuthAction(0, 'UserPictures::', '::', ACCESS_COMMENT)) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }

    // Create output object - this object will store all of our output so that
    // we can return it easily when required
    $pnRender =& new pnRender('UserPictures');
    
    $uid=pnUserGetVar('uid');
    $pnRender->assign('uid',$uid);
    $categories = pnModAPIFunc('UserPictures','user','getCategories',array('uid'=>$uid));
    $pnRender->assign('categories',$categories);

    $action = pnVarCleanFromInput('action');

    if (isset($action) && ($action == 'newcat')) {
	if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
        }
	else {
	    $text=pnVarCleanFromInput('text');
	    $title=pnVarCleanFromInput('title');
	    if (pnModAPIFunc('UserPictures','user','addCategory',array('uid'=>$uid,'title'=>$title,'text'=>$text))) pnSessionSetVar('statusmsg',_USERPICTURESCATCREATED);
	    else pnSessionSetVar('errormsg',_USERPICTURESADDCATFAILED);
	}
    }
    else if (isset($action) && ($action == 'editcat')) {
	if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
        }
	else {
	    $text=pnVarCleanFromInput('text');
	    $id=pnVarCleanFromInput('id');
	    $title=pnVarCleanFromInput('title');
	    $delete=pnVarCleanFromInput('delete');
	    if (pnModAPIFunc('UserPictures','user','editCategory',array('id'=>$id,'title'=>$title,'text'=>$text,'uid'=>$uid,'delete'=>$delete))) pnSessionSetVar('statusmsg',_USERPICTURESACTIONDONE);
	    else pnSessionSetVar('errormsg',_USERPICTURESEDITFAILED);
	}
    }
    else if (isset($action) && ($action == 'addtocat')) {
	if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
        }
	else {
	    $picture_id = (int)pnVarCleanFromInput('picture_id');
	    $cat_id = (int)pnVarCleanFromInput('cat_id');
	    if (pnModAPIFunc('UserPictures','user','addToCategory',array('uid'=>$uid,'picture_id'=>$picture_id,'cat_id'=>$cat_id))) {
	        pnSessionSetVar('statusmsg',_USERPICTURESADDEDTOCATEGORY);
	        return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>0)).'#'.$picture_id);
	    }
	    else {
	        pnSessionSetVar('errormsg',_USERPICTURESADDTOCATFAILURE);
	        return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>0)));
	    }
	}
    }
    else if (isset($action) && ($action == 'delfromcat')) {
	if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
        }
	else {
	    $picture_id = (int)pnVarCleanFromInput('picture_id');
	    $cat_id = (int)pnVarCleanFromInput('cat_id');
	    if (pnModAPIFunc('UserPictures','user','delFromCategory',array('uid'=>$uid,'picture_id'=>$picture_id,'cat_id'=>$cat_id))) {
	        pnSessionSetVar('statusmsg',_USERPICTURESDELETEDFROMCATEGORY);
	        return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>0)).'#'.$picture_id);
	    }
    	    else {
	        pnSessionSetVar('errormsg',_USERPICTURESDELETEFROMCATFAILURE);
		return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>0)));
	    }
	}
    }
    // clean the url
    if (isset($action)) return pnRedirect(pnModURL('UserPictures','user','manageCategories'));

    // Return the output that has been generated by this function
    return $pnRender->fetch('userpictures_user_managecategories.htm');
}

/**
 * display a user's gallery as listet thumbnails
 * 
 * @return       output       
 */
function UserPictures_user_showThumbnailGallery()
{
    $uid=pnVarCleanFromInput('uid');
    if (!isset($uid) || (!($uid>0))) {
	pnSessionSetVar('erormsg',_USERPICTURESNOUSERSPECIFIED);
	return pnRedirect(pnModURL('UserPictures','user','main'));
    }

    // Security check removed - we will use our own security check ;-)
    $settings=pnModAPIFunc('UserPictures','user','getSettings',array('uid'=>$uid));
    if (($settings['picspublic']!=1) && (!pnUserLoggedIn())) {
        return pnVarPrepHTMLDisplay(_MODULENOAUTH);
    }


    // Create output object - this object will store all of our output so that
    // we can return it easily when required
    $pnRender =& new pnRender('UserPictures');

    // pager
    $startnumthumb = pnVarCleanFromInput('startnumthumb');
    if (!isset($startnumthumb) || (!($startnumthumb>0))) $startnumthumb = 1;
    $pnRender->assign('startnumthumb',$startnumthumb);

    $pnRender->assign('uid',$uid);
    $pnRender->assign('viewer_uid',pnUsergetVar('uid'));

    // there might be a category filter active
    $cat_id=(int)pnVarCleanFromInput('cat_id');
    $pnRender->assign('cat_id',$cat_id);
    // let's get the pictures
    $pictures=pnModAPIFunc('UserPictures','user','getPictures',array('template_id'=>0,'uid'=>$uid,'cat_id'=>$cat_id));
    $picturesselected=pnModAPIFunc('UserPictures','user','getPictures',array('template_id'=>0,'uid'=>$uid,'cat_id'=>$cat_id,'startnumthumb'=>$startnumthumb));
    $pnRender->assign('picturesselected',$picturesselected);
    $pnRender->assign('pictures',$pictures);
    $pnRender->assign('picturecounter',count($pictures));
    $startnum=pnVarCleanFromInput('startnum');
    if (!isset($startnum) or (!($startnum>=0))) $startnum=1;
    $pnRender->assign('startnum',$startnum);

    // Return the output that has been generated by this function
    return $pnRender->fetch('userpictures_user_showthumbnailgallery.htm');
}

/**
 * the main user function for picture management
 * 
 * @return       output       The main module page
 */
function UserPictures_user_managePicture()
{
    // Security check 
    if (!pnSecAuthAction(0, 'UserPictures::', '::', ACCESS_COMMENT) || !pnUserLoggedIn()) {
        pnSessionSetVar('errormsg',_MODULENOAUTH);
	return pnRedirect(pnModURL('UserPictures','user','main'));
    }

    $action 		= FormUtil::getPassedValue('action');
    $template_id 	= FormUtil::getPassedValue('template_id');
    $picture_id 	= FormUtil::getPassedValue('picture_id');
    $uid 			= pnUserGetVar('uid');
    $id 			= pnUserGetVar('template_id');
    
    if (isset($action) && ($action=='delete')) {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
            return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
        }
	if (pnModAPIFunc('UserPictures','user','deletePicture',array('picture_id'=>$picture_id,'uid'=>$uid,'template_id'=>$template_id))) pnSessionSetVar('statusmsg',_USERPICTURESDELETED);
	else pnSessionSetVar('errormsg',_USERPICTURESDELETEERROR);
    }    
    if (isset($action) && ($action=='avatar')) {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
            return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
        }
	if (pnModAPIFunc('UserPictures','user','copyPictureAsAvatar',array('picture_id'=>$picture_id,'uid'=>$uid,'template_id'=>$template_id))) pnSessionSetVar('statusmsg',_USERPICTURESSETASAVATAR);
	else pnSessionSetVar('errormsg',_USERPICTURESSETASAVATARERROR);
    }    
    if (isset($action) && ($action=='comment')) {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
            return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
        }
	$comment = pnVarCleanFromInput('comment');
	if (pnModAPIFunc('UserPictures','user','setComment',array('picture_id'=>$picture_id,'uid'=>$uid,'comment'=>$comment))) pnSessionSetVar('statusmsg',_USERPICTURECOMMENTCHANGED);
	else pnSessionSetVar('errormsg',_USERPICTURESCOMMENTCHANGEERROR);
    }    
    if (isset($action) && ($action=='moveup')) {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
            return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
        }
	$lastfilename=pnVarCleanFromInput('lastfilename');
	if (pnModAPIFunc('UserPictures','user','moveUp',array('picture_id'=>$picture_id,'uid'=>$uid,'lastfilename'=>$lastfilename))) pnSessionSetVar('statusmsg',_USERPICTURESMOVEDUP);
	else pnSessionSetVar('errormsg',_USERPICTURESMOVEUPEERROR);
    }    
    if (isset($action) && ($action=='rotate')) {
	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
            return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
        }
	if (pnModAPIFunc('UserPictures','user','rotatePicture',array('angle'=>pnVarCleanFromInput('angle'),'uid'=>pnUserGetVar('uid'),'template_id'=>$template_id,'picture_id'=>$picture_id)  ) ) pnSessionSetVar('statusmsg',_USERPICTURESROTATED);
	else pnSessionSetVar('errormsg',_USERPICTURESROTATEDERROR);
    }    
    else if (isset($action) && ($action=='upload')) {
	// check if the user's picture limit is alread reached
	$pictures = pnModAPIFunc('UserPictures','user','getPictures',array('uid'=>$uid,'template_id'=>$template_id));
	if (count($pictures)>= pnModGetVar('UserPictures','ownuploads') && ($template_id == 0)) {
	    pnSessionSetVar('errormsg',_USERPICTURESUPLOADLIMITREACHED);
    	    return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
	}
	else if ((count($pictures)> 0) && ($template_id!=0)) {
	    pnSessionSetVar('errormsg',_USERPICTURESUPLOADLIMITREACHED);
    	    return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
	}

	// is the auth-key correct?
        if (!pnSecConfirmAuthKey()) {
            pnSessionSetVar('errormsg', _BADAUTHKEY);
            return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
        }
	
	// now we will handle the upload
	$res=pnModAPIFunc('UserPictures','user','handleUploadedPicture',array('uid'=>$uid,'template_id'=>$template_id));
	if ($res == 2) {
            pnSessionSetVar('errormsg', _USERPICTURESWRONGFILEEXTENSION);
            return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
	}
	else if ($res == 3) {
	    pnSessionSetVar('errormsg',_USERPICTURESMAFILESIZEREACHED);
            return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
        }
	else if ($res == 3) {
	    pnSessionSetVar('errormsg',_USERPICTURESUPLOADERROR);
	    return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id)));
	}
	else pnSessionSetVar('statusmsg',_USERPICTURESUPLOADED);
    }	

    // this is just to clean the browsers url input field and to 
    // avoid errors because of navigating with the browser buttons
    if (isset($action)) return pnRedirect(pnModURL('UserPictures','user','managePicture',array('template_id'=>$template_id))."#$picture_id");


    // Create regular output - no action was to be done
    $render = pnRender::getInstance('UserPictures');

    $template = pnModAPIFunc('UserPictures','admin','getTemplates',array('template_id'=>$id));
    if (!($template[id]>=0)) {
		pnSessionSetVar('errormsg',_USERPICTURESTEMPLATENUMBERFALSE);
		return pnRedirect(pnModURL('UserPictures','user','main'));
    }
    // Assign some values to some variables
    $render->assign('uid',				pnUserGetVar('uid'));
    $render->assign('activated',		pnModGetVar('UserPictures','activated'));
    $render->assign('disabledtext',		pnModGetVar('UserPictures','disabledtext'));
    $render->assign('ownuploads',		pnModGetVar('UserPictures','ownuploads'));
    $render->assign('verifytext',		pnModGetVar('UserPictures','verifytext'));
    $render->assign('avatarmanagement',	pnModGetVar('UserPictures','avatarmanagement'));
    $render->assign('template',			$template);
    $render->assign('pictures',			pnModAPIFunc('UserPictures','user','getPicture',array(
												'uid' 			=> pnUserGetVar('uid'),
												'template_id'	=> $template['id']
												)));
    
    $categories = pnModAPIFunc('UserPictures','user','getCategories',array('uid'=>$uid));
    if (count($categories)>0) $render->assign('categories',$categories);

	$render->assign('ajaxurl',pnGetBaseUrl().pnModURL('UserPictures','ajax','ajaxSaveList'));

    // Return the output that has been generated by this function
    return $render->fetch('userpictures_user_managepicture.htm');
}


?>